{% set data = load_setup_py_data() %}
{% set version = data['version'] %}

package:
  name: orange3
  version: {{ data['version'] }}

source:
  git_url: ../../orange3

build:
  number: 0
  entry_points:
    - orange-canvas = Orange.canvas.__main__:main

  script: "python -m pip install . -vv --no-deps"

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
  host:
    - python
    - setuptools
    - numpy         1.14.*
    - pip
    - wheel
    - sphinx
  run:
    - python
    - setuptools    >=36.3
    - numpy         >=1.16.0
    - scipy
    - scikit-learn  >=0.22.0
    - bottleneck    >=1.2.1
    - chardet       >=2.3.0
    - docutils
    - xlrd          >=0.9.2
    - xlsxwriter
    - keyring
    - keyrings.alt  # for alternative keyring implementations
    - pyqt          ~=5.12.0
    - pyqtgraph     >=0.10.0
    - anyqt         >=0.0.8
    - joblib        >=0.9.4
    - python.app    # [osx]
    - serverfiles
    - python-louvain >=0.13
    - matplotlib    >=2.0.0
    - opentsne      >=0.4.3
    - pandas
    - orange-canvas-core >=0.1.15
    - orange-widget-base >=4.6.0
    - pyyaml
    - openpyxl
    - baycomp    >=1.0.2
    - httpx      =0.12.*
    - qtconsole  =4.7.2

    # cachecontrol 0.12.5 is incompatible with msgpack-python=1.0
    - cachecontrol   >=0.12.6
    - msgpack-python >=1.0

test:
  # Python imports
  imports:
    - Orange
    - Orange.canvas.config

    - Orange.widgets
    - Orange.widgets.data
    - Orange.widgets.evaluate
    - Orange.widgets.model
    - Orange.widgets.unsupervised
    - Orange.widgets.visualize

    - Orange.classification
    - Orange.clustering
    - Orange.data
    - Orange.distance
    - Orange.evaluation
    - Orange.modelling
    - Orange.preprocess
    - Orange.projection
    - Orange.regression
    - Orange.statistics

  commands:
    - orange-canvas --help
    - python -c "import pkg_resources as pr; pr.require('Orange3')"

about:
  home: http://orange.biolab.si/
  license: GNU General Public License v3 or later (GPLv3+)
  summary: 'Orange, a component-based data mining framework.'
